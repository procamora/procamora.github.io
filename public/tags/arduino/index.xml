<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>arduino on #&gt; fireroot</title>
        <link>https://www.procamora.com/tags/arduino/</link>
        <description>Recent content in arduino on #&gt; fireroot</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>es</language>
        <lastBuildDate>Tue, 08 Oct 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://www.procamora.com/tags/arduino/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Arduino burn bootloader</title>
        <link>https://www.procamora.com/p/arduino-bootloader/</link>
        <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
        
        <guid>https://www.procamora.com/p/arduino-bootloader/</guid>
        <description>&lt;img src="https://www.procamora.com/covers/software.png" alt="Featured image of post Arduino burn bootloader" /&gt;&lt;h1 id=&#34;introducción&#34;&gt;Introducción&lt;/h1&gt;
&lt;p&gt;En ocasiones es necesario instalar un bootloader o actualizarlo en una placa Arduino, para realizar esto podemos usar un programador externo o usar otra placa Arduino como programador.&lt;/p&gt;
&lt;p&gt;Un Arduino actuá como programador, al que se le llamara master y el otro que es al que se le va a instalar el bootloader, se le llamará slave. La comunicación entre el PC y el master se hace a través del protocolo serie de esta placa, y la comunicación entre el master y el slave se hace a través del protocolo SPI.&lt;/p&gt;
&lt;p&gt;Este proceso se realizara en dos pasos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;El primer paso consiste en programar la Arduino para que actúe como programador.&lt;/li&gt;
&lt;li&gt;El segundo paso consiste en interconectar los Arduinos y quemar el bootloader.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En este caso especifico se va a usar una Arduino Uno como master y una Arduino Pro Mini como slave.&lt;/p&gt;
&lt;h1 id=&#34;programar-arduino-master-como-arduinoisp&#34;&gt;Programar Arduino master como ArduinoISP&lt;/h1&gt;
&lt;p&gt;Para preparar la Arduino master como programador, lo único que será necesario es cargar el Sketch &amp;ldquo;Arduino as ISP&amp;rdquo;, esto se realiza de la siguiente forma:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Cargar el Sketch:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; File &amp;gt; Examples &amp;gt; 11.ArduinoISP &amp;gt; ArduinoISP
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Seleccionar el tipo de placa al que se le va a cargar el Sketch:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; Tools &amp;gt; Board &amp;gt; Arduino / Genuino Uno
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Seleccionamos el programador por defecto:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; Tools &amp;gt; Programmer &amp;gt; &amp;quot;AVRISP mkll&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cargar el Sketch:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; Upload
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Una vez cargado el Sketch ya podemos proceder a interconectar las Arduinos como master y slave para proceder con el quemado del bootloader.&lt;/p&gt;
&lt;h1 id=&#34;conectar-arduino-pro-mini-como-slave&#34;&gt;Conectar Arduino Pro Mini como slave&lt;/h1&gt;
&lt;p&gt;Las conexiones se realizan con el protocolo SPI, en la Arduino Uno y Arduino Pro Mini están en los pines 10 al 13, podemos ver las conexión de los pines en la siguiente tabla:&lt;/p&gt;
&lt;p&gt;[jtable caption=&amp;ldquo;This is caption&amp;rdquo; th=&amp;ldquo;0&amp;rdquo;]
Master (Arduino Uno),Slave (Arduino Pro mini)
Pin 13 (SCK),Pin 13 (SCK)
Pin 12 (MISO),Pin 12 (MISO)
Pin 11 (MOSI),Pin 11 (MOSI)
Pin 10 (SS),Reset
5V,5V
GND,GND
[/jtable]&lt;/p&gt;
&lt;p&gt;Podemos ver la imagen de las conexiones realizadas a continuación:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.procamora.com/images/2019/burn_bootloader.svg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Conexiones&#34;
	
	
&gt;{:height=&amp;ldquo;auto&amp;rdquo; width=&amp;ldquo;100%&amp;rdquo;}&lt;/p&gt;
&lt;h1 id=&#34;quemar-bootloader&#34;&gt;Quemar bootloader&lt;/h1&gt;
&lt;p&gt;Una vez que están realizadas todas las conexiones solo queda quemar el bootloader, para esto hay que seguir los siguientes pasos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Seleccionar el tipo de placa del tipo que es el slave:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; Tools &amp;gt; Board &amp;gt; Arduino Pro or Arduino Pro Mini
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Seleccionamos el programador:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; Tools &amp;gt; Programmer &amp;gt; &amp;quot;Arduino as ISP&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Quemamos el bootloader:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; Tools &amp;gt; Burn Bootloader
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Veremos como parpadean las luces de la Arduino master durante unos segundos y después se completara el proceso.&lt;/p&gt;
&lt;h1 id=&#34;esquema-placa-para-quemar-el-bootloader-en-un-procesador-atmega328p&#34;&gt;Esquema placa para quemar el bootloader en un procesador ATmega328P&lt;/h1&gt;
&lt;p&gt;En el caso de querer quemar el bootloader en una placa microcontroladora ATmega328P, podremos hacerlo siguiendo el siguiente esquema:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.procamora.com/images/2019/BurnBootloaderEsquematic.svg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Conexiones&#34;
	
	
&gt;{:height=&amp;ldquo;auto&amp;rdquo; width=&amp;ldquo;100%&amp;rdquo;}&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.procamora.com/images/2019/BurnBootloaderPCB.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Conexiones&#34;
	
	
&gt;{:height=&amp;ldquo;auto&amp;rdquo; width=&amp;ldquo;100%&amp;rdquo;}&lt;/p&gt;
&lt;p&gt;Podemos descargar el esquemático y el PCB de EasyEDA desde aquí: &lt;a class=&#34;link&#34; href=&#34;https://www.procamora.com/downloads/easyeda/BurnBootloaderArduino.json&#34; &gt;Esquemático&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://www.procamora.com/downloads/easyeda/BurnBootloaderArduinoPCB.json&#34; &gt;PCB&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fuentes: &lt;a class=&#34;link&#34; href=&#34;https://www.luisllamas.es/usar-arduino-para-reprogramar-el-bootloader/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;0&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Uso telegram en Arduino WeMos</title>
        <link>https://www.procamora.com/p/uso-telegram-en-arduino-wemos/</link>
        <pubDate>Tue, 06 Sep 2016 00:00:00 +0000</pubDate>
        
        <guid>https://www.procamora.com/p/uso-telegram-en-arduino-wemos/</guid>
        <description>&lt;img src="https://www.procamora.com/covers/programming.png" alt="Featured image of post Uso telegram en Arduino WeMos" /&gt;&lt;h2 id=&#34;introducción&#34;&gt;Introducción:&lt;/h2&gt;
&lt;p&gt;Instalar la tarjeta &lt;em&gt;esp8266&lt;/em&gt; en el IDE de arduino para poder configurar una placa Wemos con la que tener un bot de telegram.&lt;/p&gt;
&lt;h2 id=&#34;requisitos-previos&#34;&gt;Requisitos previos:&lt;/h2&gt;
&lt;p&gt;Tener instalado Arduino IDE&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#Fedora y derivadas&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dnf install arduino
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#Debian y derivados&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install arduino
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Resto:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.arduino.cc/en/Main/Software&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pagina oficial de arduino&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;instalación-de-la-tarjeta-esp8266&#34;&gt;Instalación de la tarjeta ESP8266&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;En el IDE de arduino vamos a &lt;em&gt;Archivo/Preferencias&lt;/em&gt; y añadimos una nueva tarjeta en el Gestor de URLs Adicionales de Tarjetas.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;La tarjeta que hay que añadir es:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://arduino.esp8266.com/stable/package_esp8266com_index.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.procamora.com/images/2017/preferencias.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;preferencias&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Puede agregar varias URL, separándolas con comas.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Instalamos la nueva placa, para eso vamos a &lt;em&gt;Herramientas/Placa/Gestor de tarjetas&lt;/em&gt; y buscamos la placa &lt;code&gt;esp8266&lt;/code&gt; y le damos a instalar.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://www.procamora.com/images/2017/placas.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;placas&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Una vez instalada ya podemos seleccionar la placa y configurarla.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Seleccionamos la placa: WeMos D1 R2 &amp;amp; mini
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Upload Using:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Serial – Use USB port on board to upload flash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;OTA – Use OTA to upload flash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CPU Frequency:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;80MHz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;160MHz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Flash Size:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4M (3M SPIFFS) – 3M File system size
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4M (1M SPIFFS) – 1M File system size
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Upload Speed:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;921600 bps – recommend
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://www.procamora.com/images/2017/wemos.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;wemos&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;instalacion-de-los-ejemplos-de-uso-para-la-placa-wemos&#34;&gt;Instalacion de los ejemplos de uso para la placa Wemos&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Nos descargamos el &lt;a class=&#34;link&#34; href=&#34;https://github.com/wemos/D1_mini_Examples&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;repositorio de ejemplos de Wemos&lt;/a&gt; (como un zip)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Renombramos el zip como D1_mini_Examples&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En &lt;em&gt;Programa/Incluir librería/Añadir librería .ZIP&lt;/em&gt; seleccionamos la librería para que se importe y ya esta lista para ser usada.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://www.procamora.com/images/2017/ejemploswemos.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;ejemplos&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;instalación-de-la-librería-universal-telegram-bot-library&#34;&gt;Instalación de la librería Universal Telegram Bot Library&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Descargar la librería &lt;a class=&#34;link&#34; href=&#34;https://github.com/witnessmenow/Universal-Arduino-Telegram-Bot&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Universal Telegram Bot Library&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Añadir la librería al IDE de arduino y ya la podremos usar&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;importante&#34;&gt;IMPORTANTE:&lt;/h4&gt;
&lt;p&gt;A la hora de hacer la conexión WIFI los ejemplos por defecto no funcionan correctamente&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;bien&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Serial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;115200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;WiFi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SSID_WIFI&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PASS_WIFI&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//definidas en credentials.h
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WiFi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WL_CONNECTED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;delay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Serial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Serial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;WiFi conectado&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Serial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;IP address: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Serial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WiFi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localIP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;mal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Serial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;115200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WiFi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ssid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WL_CONNECTED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Serial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;delay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Serial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;WiFi connected&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Serial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;IP address: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;IPAddress&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ip&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WiFi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localIP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Serial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
